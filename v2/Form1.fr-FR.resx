<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="DevExpress.Data.v20.2" name="DevExpress.Data.v20.2, Version=20.2.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="navBarItemLogs.ImageOptions.SvgImage" type="DevExpress.Utils.Svg.SvgImage, DevExpress.Data.v20.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFlEZXZFeHByZXNzLkRhdGEudjE4LjIsIFZlcnNpb249MTguMi43
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjg4ZDE3NTRkNzAwZTQ5YQUBAAAAHURl
        dkV4cHJlc3MuVXRpbHMuU3ZnLlN2Z0ltYWdlAQAAAAREYXRhBwICAAAACQMAAAAPAwAAAFsFAAAC77u/
        PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4NCjxzdmcgeD0iMHB4IiB5PSIwcHgi
        IHZpZXdCb3g9IjAgMCAzMiAzMiIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcv
        MjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWw6c3Bh
        Y2U9InByZXNlcnZlIiBpZD0iTGluZU51bWJlcmluZyI+DQogIDxwYXRoIGQ9Ik0zMSwySDEzYy0wLjUs
        MC0xLDAuNS0xLDF2MjZjMCwwLjUsMC41LDEsMSwxaDE4YzAuNSwwLDEtMC41LDEtMVYzQzMyLDIuNSwz
        MS41LDIsMzEsMnogTTMwLDI4SDE0VjRoMTZWMjh6IiBmaWxsPSIjNzI3MjcyIiBjbGFzcz0iQmxhY2si
        IC8+DQogIDxwYXRoIGQ9Ik0yNiwxMmgtOHYtMmg4VjEyeiBNMjYsMjJoLTh2LTJoOFYyMnoiIGZpbGw9
        IiMxMTc3RDciIGNsYXNzPSJCbHVlIiAvPg0KICA8cGF0aCBkPSJNNCw2djhIMlY5LjNsLTIsMFY3Ljds
        MC4yLDBjMC4yLDAsMC41LDAsMC43LTAuMWMwLjMsMCwwLjUtMC4xLDAuNy0wLjNjMC4yLTAuMSwwLjQt
        MC4zLDAuNS0wLjUgIGMwLjEtMC4yLDAuMi0wLjQsMC4zLTAuN2wwLTAuMUg0eiBNNiwyNHYtMS42SDIu
        NkMyLjcsMjIuMiwyLjksMjIuMSwzLDIyYzAuMi0wLjIsMC41LTAuNCwwLjctMC41YzAuMy0wLjIsMC41
        LTAuMywwLjgtMC41ICBjMC4zLTAuMiwwLjUtMC40LDAuNy0wLjZjMC4yLTAuMiwwLjQtMC41LDAuNS0w
        LjhjMC4xLTAuMywwLjItMC42LDAuMi0xYzAtMC40LTAuMS0wLjctMC4yLTEuMWMtMC4xLTAuMy0wLjQt
        MC42LTAuNi0wLjggIGMtMC4zLTAuMi0wLjUtMC40LTAuOS0wLjVjLTAuMy0wLjEtMC43LTAuMi0xLTAu
        MmMtMC41LDAtMC45LDAuMS0xLjMsMC4yYy0wLjQsMC4yLTAuNywwLjQtMC45LDAuN2MtMC4yLDAuMy0w
        LjQsMC42LTAuNSwxICBjLTAuMSwwLjQtMC4yLDAuOC0wLjIsMS4zbDAsMC4xaDEuOHYtMC4xYzAtMC4y
        LDAtMC40LDAuMS0wLjZjMC0wLjIsMC4xLTAuNCwwLjItMC41YzAuMS0wLjEsMC4yLTAuMywwLjMtMC40
        ICBjMC4xLTAuMSwwLjMtMC4xLDAuNS0wLjFjMC4zLDAsMC41LDAuMSwwLjcsMC4zYzAuMiwwLjIsMC4z
        LDAuNCwwLjMsMC44YzAsMC4yLDAsMC40LTAuMSwwLjVjLTAuMSwwLjItMC4yLDAuMy0wLjQsMC41ICBj
        LTAuMSwwLjEtMC4zLDAuMy0wLjUsMC40Yy0wLjIsMC4xLTAuNCwwLjItMC41LDAuNEMyLjMsMjAuNiwy
        LDIwLjgsMS43LDIxYy0wLjMsMC4yLTAuNiwwLjUtMC44LDAuN2MtMC4yLDAuMy0wLjQsMC42LTAuNSww
        LjkgIGMtMC4xLDAuMy0wLjIsMC43LTAuMiwxLjJWMjRINnogTTEwLDEwSDh2MmgyVjEweiBNMTAsMjBI
        OHYyaDJWMjB6IiBmaWxsPSIjRDExQzFDIiBjbGFzcz0iUmVkIiAvPg0KPC9zdmc+Cw==
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>